diff -ur firefox-45.2.0esr.orig/toolkit/crashreporter/google-breakpad/src/common/linux/memory_mapped_file.cc firefox-45.2.0esr/toolkit/crashreporter/google-breakpad/src/common/linux/memory_mapped_file.cc
--- firefox-45.2.0esr.orig/toolkit/crashreporter/google-breakpad/src/common/linux/memory_mapped_file.cc	2016-07-30 18:55:08.397884283 -0700
+++ firefox-45.2.0esr/toolkit/crashreporter/google-breakpad/src/common/linux/memory_mapped_file.cc	2016-07-30 19:00:15.769894412 -0700
@@ -43,11 +43,13 @@
 #include "common/memory_range.h"
 #include "third_party/lss/linux_syscall_support.h"
 
+#if defined(__ILP32__)
 #define sys_open open
 #define sys_close close
-#define sys_mmap mmap
+#define sys_mmap2 mmap
 #define sys_munmap munmap
-#define sys_fstat fstat
+#define sys_fstat64 fstat64
+#endif
 
 namespace google_breakpad {
 
@@ -69,12 +71,12 @@
     return false;
   }
 
-#if defined(__x86_64__)
+#if defined(__x86_64__) && defined(__LP64__)
   struct kernel_stat st;
   if (sys_fstat(fd, (struct stat*)&st) == -1 || st.st_size < 0) {
 #else
   struct kernel_stat64 st;
-  if (sys_fstat64(fd, &st) == -1 || st.st_size < 0) {
+  if (sys_fstat64(fd, (struct stat64*)&st) == -1 || st.st_size < 0) {
 #endif
     sys_close(fd);
     return false;
@@ -88,7 +90,7 @@
     return true;
   }
 
-#if defined(__x86_64__)
+#if defined(__x86_64__) && defined(__LP64__)
   void* data = sys_mmap(NULL, st.st_size, PROT_READ, MAP_PRIVATE, fd, 0);
 #else
   void* data = sys_mmap2(NULL, st.st_size, PROT_READ, MAP_PRIVATE, fd, 0);
diff -ur firefox-45.2.0esr.orig/toolkit/crashreporter/google-breakpad/src/third_party/lss/linux_syscall_support.h firefox-45.2.0esr/toolkit/crashreporter/google-breakpad/src/third_party/lss/linux_syscall_support.h
--- firefox-45.2.0esr.orig/toolkit/crashreporter/google-breakpad/src/third_party/lss/linux_syscall_support.h	2016-07-30 18:55:08.313884281 -0700
+++ firefox-45.2.0esr/toolkit/crashreporter/google-breakpad/src/third_party/lss/linux_syscall_support.h	2016-07-30 19:03:00.705899847 -0700
@@ -86,25 +86,26 @@
  * Porting to other related platforms should not be difficult.
  */
 #if (defined(__x86_64__) && defined(__ILP32__))
-struct kernel_stat {
-  unsigned long      st_dev;
-  unsigned long      st_ino;
-  unsigned long      st_nlink;
+struct kernel_stat64 {
+  unsigned long long st_dev;
+  unsigned char      __pad0[4];
+  unsigned           __st_ino;
   unsigned           st_mode;
+  unsigned           st_nlink;
   unsigned           st_uid;
   unsigned           st_gid;
-  unsigned           __pad0;
-  unsigned long      st_rdev;
-  long               st_size;
-  long               st_blksize;
-  long               st_blocks;
-  unsigned long      st_atime_;
-  unsigned long      st_atime_nsec_;
-  unsigned long      st_mtime_;
-  unsigned long      st_mtime_nsec_;
-  unsigned long      st_ctime_;
-  unsigned long      st_ctime_nsec_;
-  long               __unused[3];
+  unsigned long long st_rdev;
+  unsigned char      __pad3[4];
+  long long          st_size;
+  unsigned           st_blksize;
+  unsigned long long st_blocks;
+  unsigned           st_atime_;
+  unsigned           st_atime_nsec_;
+  unsigned           st_mtime_;
+  unsigned           st_mtime_nsec_;
+  unsigned           st_ctime_;
+  unsigned           st_ctime_nsec_;
+  unsigned long long st_ino;
 };
 #elif (defined(__i386__) || defined(__x86_64__) && defined(__LP64__) \
      || defined(__ARM_ARCH_3__) ||   \

diff -urp chromium-54.0.2824.0.orig/v8/BUILD.gn chromium-54.0.2824.0/v8/BUILD.gn
--- chromium-54.0.2824.0.orig/v8/BUILD.gn	2016-08-09 22:46:55.000000000 -0700
+++ chromium-54.0.2824.0/v8/BUILD.gn	2016-08-17 18:23:17.328894103 -0700
@@ -307,7 +307,7 @@ config("toolchain") {
       cflags += [ "/arch:SSE2" ]
     }
   }
-  if (v8_current_cpu == "x64") {
+  if (v8_current_cpu == "x64" || v8_target_arch == "x32") {
     defines += [ "V8_TARGET_ARCH_X64" ]
     if (is_win) {
       # Increase the initial stack size. The default is 1MB, this is 2MB. This
@@ -1702,7 +1702,7 @@ v8_source_set("v8_base") {
       "src/regexp/ia32/regexp-macro-assembler-ia32.cc",
       "src/regexp/ia32/regexp-macro-assembler-ia32.h",
     ]
-  } else if (v8_current_cpu == "x64") {
+  } else if (v8_current_cpu == "x64" || v8_target_arch == "x32") {
     sources += [
       "src/builtins/x64/builtins-x64.cc",
       "src/compiler/x64/code-generator-x64.cc",
Only in chromium-54.0.2824.0/v8: BUILD.gn.orig
Only in chromium-54.0.2824.0/v8: BUILD.gn.rej
diff -urp chromium-54.0.2824.0.orig/v8/src/x64/disasm-x64.cc chromium-54.0.2824.0/v8/src/x64/disasm-x64.cc
--- chromium-54.0.2824.0.orig/v8/src/x64/disasm-x64.cc	2016-08-09 22:46:55.000000000 -0700
+++ chromium-54.0.2824.0/v8/src/x64/disasm-x64.cc	2016-08-17 18:21:25.636895891 -0700
@@ -1958,6 +1958,7 @@ int DisassemblerX64::TwoByteOpcodeInstru
     // SETcc: Set byte on condition. Needs pointer to beginning of instruction.
     current = data + SetCC(data);
 
+#if V8_HOST_ARCH_64_BIT
   } else if (opcode == 0xAB || opcode == 0xA5 || opcode == 0xAD) {
     // SHLD, SHRD (double-precision shift), BTS (bit set).
     AppendToBuffer("%s ", mnemonic);
@@ -1969,6 +1970,30 @@ int DisassemblerX64::TwoByteOpcodeInstru
     } else {
       AppendToBuffer(",%s,cl", NameOfCPURegister(regop));
     }
+#else //V8_HOST_ARCH_32_BIT
+    } else if (opcode == 0xA4 || opcode == 0xAC) {
+      // shld, shrd
+      //current += 2;
+      AppendToBuffer("%s ", mnemonic);
+      int mod, regop, rm;
+      get_modrm(*current, &mod, &regop, &rm);
+      int8_t imm8 = static_cast<int8_t>(current[1]);
+      current += 2;
+      AppendToBuffer("%s,%s,%d", NameOfCPURegister(rm),
+                     NameOfCPURegister(regop), static_cast<int>(imm8));
+    } else if (opcode == 0xAB || opcode == 0xA5 || opcode == 0xAD) {
+      // shrd_cl, shld_cl, bts
+      //current += 2;
+      AppendToBuffer("%s ", mnemonic);
+      int mod, regop, rm;
+      get_modrm(*current, &mod, &regop, &rm);
+      current += PrintRightOperand(current);
+      if (opcode == 0xAB) {
+        AppendToBuffer(",%s", NameOfCPURegister(regop));
+      } else {
+        AppendToBuffer(",%s,cl", NameOfCPURegister(regop));
+    }
+#endif //V8_HOST_ARCH_32_BIT
   } else if (opcode == 0xB8 || opcode == 0xBC || opcode == 0xBD) {
     // POPCNT, CTZ, CLZ.
     AppendToBuffer("%s%c ", mnemonic, operand_size_code());
@@ -2018,12 +2043,23 @@ const char* DisassemblerX64::TwoByteMnem
       return (group_1_prefix_ == 0xF2) ? "maxsd" : "maxss";
     case 0xA2:
       return "cpuid";
+#if V8_HOST_ARCH_64_BIT
+    case 0xA5:
+      return "shld";
+    case 0xAD:
+      return "shrd";
+#else //V8_HOST_ARCH_32_BIT
+    case 0xA4:
+      return "shld";
     case 0xA5:
       return "shld";
-    case 0xAB:
-      return "bts";
     case 0xAD:
       return "shrd";
+    case 0xAC:
+      return "shrd";  // 3-operand version.
+#endif //V8_HOST_ARCH_32_BIT
+    case 0xAB:
+      return "bts";
     case 0xAF:
       return "imul";
     case 0xB0:
Only in chromium-54.0.2824.0/v8/src/x64: disasm-x64.cc.orig

# HG changeset patch
# User Felix Janda <felix.janda@posteo.de>
# Date 1423173074 -3600
#      Thu Feb 05 22:51:14 2015 +0100
# Node ID 99737aeca7977745a60486fa2e210d4b192eeb88
# Parent  2d344ef8da33717224d5a08570dc834ca2254f9f
tools/profiler: Use <stdint.h> types

diff -r 2d344ef8da33 -r 99737aeca797 tools/profiler/UnwinderThread2.cpp
--- a/tools/profiler/UnwinderThread2.cpp	Sun Feb 01 19:32:36 2015 +0100
+++ b/tools/profiler/UnwinderThread2.cpp	Thu Feb 05 22:51:14 2015 +0100
@@ -470,7 +470,7 @@
 //////////////////////////////////////////////////////////
 
 // This is the interface to LUL.
-typedef  struct { u_int64_t pc; u_int64_t sp; }  PCandSP;
+typedef  struct { uint64_t pc; uint64_t sp; }  PCandSP;
 
 // Forward declaration.  Implementation is below.
 static
@@ -1338,7 +1338,7 @@
       else {
         // We have at least one N and one P entry available.
         // Scan forwards to find the SP of the current P entry
-        u_int64_t sp_cur_P = 0;
+        uint64_t sp_cur_P = 0;
         unsigned int m = next_P + 1;
         while (1) {
           /* This assertion should hold because in a well formed
@@ -1349,7 +1349,7 @@
           if (ent.is_ent_hint('Q'))
             break;
           if (ent.is_ent('S')) {
-            sp_cur_P = reinterpret_cast<u_int64_t>(ent.get_tagPtr());
+            sp_cur_P = reinterpret_cast<uint64_t>(ent.get_tagPtr());
             break;
           }
           m++;
@@ -1358,7 +1358,7 @@
           if (0) LOG("  P  <=  last_was_P && sp_cur_P == 0");
           use_P = true;
         } else {
-          u_int64_t sp_cur_N = pairs[next_N].sp;
+          uint64_t sp_cur_N = pairs[next_N].sp;
           use_P = (sp_cur_P > sp_cur_N);
           if (0) LOGF("  %s  <=  sps P %p N %p",
                       use_P ? "P" : "N", (void*)(intptr_t)sp_cur_P, 
diff -r 2d344ef8da33 -r 99737aeca797 tools/profiler/local_debug_info_symbolizer.cc
--- a/tools/profiler/local_debug_info_symbolizer.cc	Sun Feb 01 19:32:36 2015 +0100
+++ b/tools/profiler/local_debug_info_symbolizer.cc	Thu Feb 05 22:51:14 2015 +0100
@@ -222,7 +222,7 @@
     debug_info_module = it->second;
   }
 
-  u_int64_t address = frame->instruction - frame->module->base_address();
+  uint64_t address = frame->instruction - frame->module->base_address();
   Module::Function* function =
       debug_info_module->FindFunctionByAddress(address);
   if (function) {
@@ -282,7 +282,7 @@
   if (it == symbols_.end()) return NULL;
 
   Module* module = it->second;
-  u_int64_t address = frame->instruction - frame->module->base_address();
+  uint64_t address = frame->instruction - frame->module->base_address();
   Module::StackFrameEntry* entry =
       module->FindStackFrameEntryByAddress(address);
   if (!entry)

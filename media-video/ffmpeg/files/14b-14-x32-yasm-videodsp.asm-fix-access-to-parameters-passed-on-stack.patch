diff -urp ffmpeg-2.8.6.orig/libavcodec/x86/videodsp.asm ffmpeg-2.8.6/libavcodec/x86/videodsp.asm
--- ffmpeg-2.8.6.orig/libavcodec/x86/videodsp.asm	2016-10-23 14:40:16.772779764 -0700
+++ ffmpeg-2.8.6/libavcodec/x86/videodsp.asm	2016-10-23 14:50:14.819328302 -0700
@@ -93,6 +93,36 @@ vvar_fn
 
 %macro hvar_fn 0
 cglobal emu_edge_hvar, 5, 6, 1, dst, dst_stride, start_x, n_words, h, w
+%ifdef __ILP32__
+    lea            dstd, [dstd+n_wordsd*2]
+    neg        n_wordsd
+    lea        start_xd, [start_xd+n_wordsd*2]
+.y_loop:                                        ; do {
+%if cpuflag(avx2)
+    vpbroadcastb     m0, [dstd+start_xd]
+    mov              wd, n_wordsd               ;   initialize w
+%else
+    movzx            wd, byte [dstd+start_xd]   ;   w = read(1)
+    imul             wd, 0x01010101             ;   w *= 0x01010101
+    movd             m0, wd
+    mov              wd, n_wordsd               ;   initialize w
+%if cpuflag(sse2)
+    pshufd           m0, m0, q0000              ;   splat
+%else ; mmx
+    punpckldq        m0, m0                     ;   splat
+%endif ; mmx/sse
+%endif ; avx2
+.x_loop:                                        ;   do {
+    movu    [dstd+wd*2], m0                     ;     write($reg, $mmsize)
+    add              wd, mmsize/2               ;     w -= $mmsize/2
+    cmp              wd, -mmsize/2              ;   } while (w > $mmsize/2)
+    jl .x_loop
+    movu  [dstd-mmsize], m0                     ;   write($reg, $mmsize)
+    add            dstd, dst_strided            ;   dst += dst_stride
+    dec              hd                         ; } while (h--)
+    jnz .y_loop
+    RET
+%else ; !__ILP32__
     lea            dstq, [dstq+n_wordsq*2]
     neg        n_wordsq
     lea        start_xq, [start_xq+n_wordsq*2]
@@ -121,6 +151,7 @@ cglobal emu_edge_hvar, 5, 6, 1, dst, dst
     dec              hq                         ; } while (h--)
     jnz .y_loop
     RET
+%endif
 %endmacro
 
 %if ARCH_X86_32

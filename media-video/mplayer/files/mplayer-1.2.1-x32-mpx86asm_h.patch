--- MPlayer-1.2.1.orig/mpx86asm.h	2016-01-08 04:39:01.000000000 -0800
+++ MPlayer-1.2.1/mpx86asm.h	2016-10-19 17:00:13.868529047 -0700
@@ -35,8 +35,9 @@
 typedef struct xmm_reg { uint64_t a, b; } xmm_reg;
 typedef struct ymm_reg { uint64_t a, b, c, d; } ymm_reg;
 
-#if ARCH_X86_64
+#if ARCH_X86_64 && !defined(__ILP32__)
 #    define OPSIZE "q"
+#    define REG_PTR_MOD "q"
 #    define REG_a "rax"
 #    define REG_b "rbx"
 #    define REG_c "rcx"
@@ -44,6 +45,7 @@ typedef struct ymm_reg { uint64_t a, b,
 #    define REG_D "rdi"
 #    define REG_S "rsi"
 #    define PTR_SIZE "8"
+#    define REG8    r8
 typedef int64_t x86_reg;
 
 /* REG_SP is defined in Solaris sys headers, so use REG_sp */
@@ -56,15 +58,17 @@ typedef int64_t x86_reg;
 #    define REGd    rdx
 #    define REGSP   rsp
 
-#elif ARCH_X86_32
+#elif ARCH_X86_32 || (defined(__x86_64__) && defined(__ILP32__))
 
 #    define OPSIZE "l"
+#    define REG_PTR_MOD "k"
 #    define REG_a "eax"
 #    define REG_b "ebx"
 #    define REG_c "ecx"
 #    define REG_d "edx"
 #    define REG_D "edi"
 #    define REG_S "esi"
+#    define REG_8 "r8d"
 #    define PTR_SIZE "4"
 typedef int32_t x86_reg;
 
@@ -76,10 +80,31 @@ typedef int32_t x86_reg;
 #    define REGc    ecx
 #    define REGd    edx
 #    define REGSP   esp
+#    define REG8    r8d
 #else
 typedef int x86_reg;
 #endif
 
+#if ARCH_X86_64 || (defined(__x86_64__) && defined(__ILP32__))
+#    define REG_ra "rax"
+#    define REG_rb "rbx"
+#    define REG_rc "rcx"
+#    define REG_rd "rdx"
+#    define REG_rD "rdi"
+#    define REG_rS "rsi"
+#    define REG_rBP "rbp"
+typedef int64_t x86_native_reg;
+#elif ARCH_X86_32
+#    define REG_ra "eax"
+#    define REG_rb "ebx"
+#    define REG_rc "ecx"
+#    define REG_rd "edx"
+#    define REG_rD "edi"
+#    define REG_rS "esi"
+#    define REG_rBP "ebp"
+typedef int32_t x86_native_reg;
+#endif
+
 #define HAVE_7REGS (ARCH_X86_64 || (HAVE_EBX_AVAILABLE && HAVE_EBP_AVAILABLE))
 #define HAVE_6REGS (ARCH_X86_64 || (HAVE_EBX_AVAILABLE || HAVE_EBP_AVAILABLE))
 

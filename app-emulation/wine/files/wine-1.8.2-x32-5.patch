diff -ur wine-1.8.2.orig/loader/preloader.c wine-1.8.2/loader/preloader.c
--- wine-1.8.2.orig/loader/preloader.c	2016-08-30 01:02:43.419913338 -0700
+++ wine-1.8.2/loader/preloader.c	2016-08-30 01:20:15.240896501 -0700
@@ -402,6 +402,45 @@
                        "syscall\n\t" \
                        "ret" )
 
+#if defined(__X32__)
+void wld_exit( int code ) __attribute__((noreturn));
+SYSCALL_NOERR( wld_exit, 0x40000000 + 60 /* SYS_exit */ );
+
+ssize_t wld_read( int fd, void *buffer, size_t len );
+SYSCALL_FUNC( wld_read, 0x40000000 + 0 /* SYS_read */ );
+
+ssize_t wld_write( int fd, const void *buffer, size_t len );
+SYSCALL_FUNC( wld_write, 0x40000000 + 1 /* SYS_write */ );
+
+int wld_open( const char *name, int flags );
+SYSCALL_FUNC( wld_open, 0x40000000 + 2 /* SYS_open */ );
+
+int wld_close( int fd );
+SYSCALL_FUNC( wld_close, 0x40000000 + 3 /* SYS_close */ );
+
+void *wld_mmap( void *start, size_t len, int prot, int flags, int fd, off_t offset );
+SYSCALL_FUNC( wld_mmap, 0x40000000 + 9 /* SYS_mmap */ );
+
+int wld_mprotect( const void *addr, size_t len, int prot );
+SYSCALL_FUNC( wld_mprotect, 0x40000000 + 10 /* SYS_mprotect */ );
+
+int wld_prctl( int code, int arg );
+SYSCALL_FUNC( wld_prctl, 0x40000000 + 157 /* SYS_prctl */ );
+
+uid_t wld_getuid(void);
+SYSCALL_NOERR( wld_getuid, 0x40000000 + 102 /* SYS_getuid */ );
+
+gid_t wld_getgid(void);
+SYSCALL_NOERR( wld_getgid, 0x40000000 + 104 /* SYS_getgid */ );
+
+uid_t wld_geteuid(void);
+SYSCALL_NOERR( wld_geteuid, 0x40000000 + 107 /* SYS_geteuid */ );
+
+gid_t wld_getegid(void);
+SYSCALL_NOERR( wld_getegid, 0x40000000 + 108 /* SYS_getegid */ );
+
+#else
+
 void wld_exit( int code ) __attribute__((noreturn));
 SYSCALL_NOERR( wld_exit, 60 /* SYS_exit */ );
 
@@ -437,6 +476,7 @@
 
 gid_t wld_getegid(void);
 SYSCALL_NOERR( wld_getegid, 108 /* SYS_getegid */ );
+#endif
 
 #else
 #error preloader not implemented for this CPU

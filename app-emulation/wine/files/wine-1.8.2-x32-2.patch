diff -urp wine-1.8.2.orig/libs/wine/ldt.c wine-1.8.2/libs/wine/ldt.c
--- wine-1.8.2.orig/libs/wine/ldt.c	2016-04-12 04:42:53.000000000 -0700
+++ wine-1.8.2/libs/wine/ldt.c	2016-10-22 21:30:28.263112729 -0700
@@ -70,12 +70,20 @@ static inline void fill_modify_ldt_struc
 
 static inline int modify_ldt( int func, struct modify_ldt_s *ptr, unsigned long count )
 {
+#if defined(__X32__)
+    return syscall( __X32_SYSCALL_BIT + 154 /* SYS_modify_ldt */, func, ptr, count );
+#else
     return syscall( 123 /* SYS_modify_ldt */, func, ptr, count );
+#endif
 }
 
 static inline int set_thread_area( struct modify_ldt_s *ptr )
 {
+#if defined(__X32__)
+    return syscall( 205 /* SYS_set_thread_area */, ptr );
+#else
     return syscall( 243 /* SYS_set_thread_area */, ptr );
+#endif
 }
 
 #endif  /* linux */
diff -urp wine-1.8.2.orig/loader/main.c wine-1.8.2/loader/main.c
--- wine-1.8.2.orig/loader/main.c	2016-04-12 04:42:53.000000000 -0700
+++ wine-1.8.2/loader/main.c	2016-10-22 21:30:28.263112729 -0700
@@ -115,7 +115,11 @@ static void check_command_line( int argc
 /* separate thread to check for NPTL and TLS features */
 static void *needs_pthread( void *arg )
 {
+#if defined(__X32__)
+    pid_t tid = syscall( __X32_SYSCALL_BIT + 186 /* SYS_gettid */ );
+#else
     pid_t tid = syscall( 224 /* SYS_gettid */ );
+#endif
     /* check for NPTL */
     if (tid != -1 && tid != getpid()) return (void *)1;
     /* check for TLS glibc */
diff -urp wine-1.8.2.orig/server/change.c wine-1.8.2/server/change.c
--- wine-1.8.2.orig/server/change.c	2016-04-12 04:42:53.000000000 -0700
+++ wine-1.8.2/server/change.c	2016-10-22 21:30:28.264112767 -0700
@@ -70,9 +70,15 @@
 #define USE_INOTIFY
 #elif defined(__linux__) && defined(__i386__)
 
+#if defined(__X32__)
+#define SYS_inotify_init	__X32_SYSCALL_BIT + 253
+#define SYS_inotify_add_watch	__X32_SYSCALL_BIT + 254
+#define SYS_inotify_rm_watch	__X32_SYSCALL_BIT + 255
+#else
 #define SYS_inotify_init	291
 #define SYS_inotify_add_watch	292
 #define SYS_inotify_rm_watch	293
+#endif
 
 struct inotify_event {
     int           wd;
diff -urp wine-1.8.2.orig/server/fd.c wine-1.8.2/server/fd.c
--- wine-1.8.2.orig/server/fd.c	2016-10-22 20:21:53.183429196 -0700
+++ wine-1.8.2/server/fd.c	2016-10-22 21:30:28.266112843 -0700
@@ -134,17 +134,29 @@ struct epoll_event
 
 static inline int epoll_create( int size )
 {
+#if defined(__X32__)
+    return syscall( __X32_SYSCALL_BIT + 213 /*NR_epoll_create*/, size );
+#else
     return syscall( 254 /*NR_epoll_create*/, size );
+#endif
 }
 
 static inline int epoll_ctl( int epfd, int op, int fd, const struct epoll_event *event )
 {
+#if defined(__X32__)
+    return syscall( __X32_SYSCALL_BIT + 233 /*NR_epoll_ctl*/, epfd, op, fd, event );
+#else
     return syscall( 255 /*NR_epoll_ctl*/, epfd, op, fd, event );
+#endif
 }
 
 static inline int epoll_wait( int epfd, struct epoll_event *events, int maxevents, int timeout )
 {
+#if defined(__X32__)
+    return syscall( __X32_SYSCALL_BIT + 232 /*NR_epoll_wait*/, epfd, events, maxevents, timeout );
+#else
     return syscall( 256 /*NR_epoll_wait*/, epfd, events, maxevents, timeout );
+#endif
 }
 
 #endif /* linux && __i386__ && HAVE_STDINT_H */
diff -urp wine-1.8.2.orig/tools/winebuild/main.c wine-1.8.2/tools/winebuild/main.c
--- wine-1.8.2.orig/tools/winebuild/main.c	2016-10-22 20:21:53.094425811 -0700
+++ wine-1.8.2/tools/winebuild/main.c	2016-10-22 21:30:28.267112881 -0700
@@ -407,7 +407,8 @@ static char **parse_options( int argc, c
             break;
         case 'm':
             if (!strcmp( optarg, "16" )) spec->type = SPEC_WIN16;
             else if (!strcmp( optarg, "32" )) force_pointer_size = 4;
+            else if (!strcmp( optarg, "x32" )) force_pointer_size = 4;
             else if (!strcmp( optarg, "64" )) force_pointer_size = 8;
             else if (!strcmp( optarg, "arm" )) thumb_mode = 0;
             else if (!strcmp( optarg, "thumb" )) thumb_mode = 1;
diff -urp wine-1.8.2.orig/tools/winegcc/winegcc.c wine-1.8.2/tools/winegcc/winegcc.c
--- wine-1.8.2.orig/tools/winegcc/winegcc.c	2016-10-23 00:08:27.619707196 -0700
+++ wine-1.8.2/tools/winegcc/winegcc.c	2016-10-23 00:09:36.364310908 -0700
@@ -1517,13 +1517,16 @@ int main(int argc, char **argv)
                         opts.force_pointer_size = 4;
 			raw_linker_arg = 1;
                     }
-		    else if (strcmp("-m64", argv[i]) == 0)
+		    else if (strcmp("-m64", argv[i]) == 0 || strcmp("-mx32", argv[i]) == 0)
                     {
                         if (opts.target_cpu == CPU_x86)
                             opts.target_cpu = CPU_x86_64;
                         else if (opts.target_cpu == CPU_ARM)
                             opts.target_cpu = CPU_ARM64;
-                        opts.force_pointer_size = 8;
+                        if (strcmp("-mx32", argv[i]) == 0)
+                            opts.force_pointer_size = 4;
+                        else
+                            opts.force_pointer_size = 8;
 			raw_linker_arg = 1;
                     }
                     else if (!strcmp("-marm", argv[i] ) || !strcmp("-mthumb", argv[i] ))
diff -urp wine-1.8.2.orig/tools/winebuild/utils.c wine-1.8.2/tools/winebuild/utils.c
--- wine-1.8.2.orig/tools/winebuild/utils.c	2016-04-12 04:42:53.000000000 -0700
+++ wine-1.8.2/tools/winebuild/utils.c	2016-10-23 08:32:37.573430910 -0700
@@ -386,7 +386,11 @@ struct strarray *get_as_command(void)
         args = strarray_copy( cc_command );
         strarray_add( args, "-xassembler", "-c", NULL );
         if (force_pointer_size)
-            strarray_add_one( args, (force_pointer_size == 8) ? "-m64" : "-m32" );
+#if defined(__X32__)
+            strarray_add_one( args, (force_pointer_size == 8) ? "-m64" : "-mx32");
+#else
+            strarray_add_one( args, (force_pointer_size == 8) ? "-m64" : "-m32");
+#endif
         if (cpu_option) strarray_add_one( args, strmake("-mcpu=%s", cpu_option) );
         if (arch_option) strarray_add_one( args, strmake("-march=%s", arch_option) );
         return args;
@@ -414,7 +414,11 @@ struct strarray *get_as_command(void)
                 strarray_add_one( args, (force_pointer_size == 8) ? "-a64" : "-a32" );
                 break;
             default:
-                strarray_add_one( args, (force_pointer_size == 8) ? "--64" : "--32" );
+#if defined(__X32__)
+                strarray_add_one( args, (force_pointer_size == 8) ? "--64" : "--x32");
+#else
+                strarray_add_one( args, (force_pointer_size == 8) ? "--64" : "--32");
+#endif
                 break;
             }
             break;
@@ -454,7 +454,11 @@ struct strarray *get_ld_command(void)
                 strarray_add( args, "-m", (force_pointer_size == 8) ? "elf64ppc" : "elf32ppc", NULL );
                 break;
             default:
-                strarray_add( args, "-m", (force_pointer_size == 8) ? "elf_x86_64" : "elf_i386", NULL );
+#if defined(__X32__)
+                strarray_add( args, "-m", (force_pointer_size == 8) ? "elf_x86_64" : "elf32_x86_64", NULL);
+#else
+                strarray_add( args, "-m", (force_pointer_size == 8) ? "elf_x86_64" : "elf_i386", NULL);
+#endif
                 break;
             }
             break;

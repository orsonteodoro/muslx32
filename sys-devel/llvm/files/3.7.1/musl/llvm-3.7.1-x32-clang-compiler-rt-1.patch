diff -urp llvm-3.7.1.src.orig/projects/compiler-rt/make/platform/clang_linux.mk llvm-3.7.1.src/projects/compiler-rt/make/platform/clang_linux.mk
--- llvm-3.7.1.src.orig/projects/compiler-rt/make/platform/clang_linux.mk	2015-07-12 23:39:53.000000000 -0700
+++ llvm-3.7.1.src/projects/compiler-rt/make/platform/clang_linux.mk	2016-10-18 19:48:04.955896351 -0700
@@ -42,6 +42,23 @@ ifeq ($(CompilerTargetArch),i386)
   endif
 else
   SupportedArches := x86_64
+  # x86-64 arch has two ABIs 64 bit x86-64 and 32 bit x32
+  ifeq ($(lastword $(subst -gnu, ,$(CompilerTargetTriple))),x32)
+    SupportedArches := x32
+    ifeq ($(call TryCompile,$(CC),$(test_source),-m64),0)
+      SupportedArches += x86_64
+    endif
+  else ifeq ($(lastword $(subst -musl, ,$(CompilerTargetTriple))),x32)
+    SupportedArches := x32
+    ifeq ($(call TryCompile,$(CC),$(test_source),-m64),0)
+      SupportedArches += x86_64
+    endif
+  else
+    SupportedArches := x86_64
+    ifeq ($(call TryCompile,$(CC),$(test_source),-mx32),0)
+      SupportedArches += x32
+    endif
+  endif
   ifeq ($(call TryCompile,$(CC),$(test_source),-m32),0)
     SupportedArches += i386
   endif
@@ -67,19 +84,31 @@ endif
 
 ###
 
+# Build runtime libraries for x32.
+ifeq ($(call contains,$(SupportedArches),x32),true)
+Configs += builtins-x32 profile-x32 san-x32 asan-x32 tsan-x32 \
+           msan-x32 ubsan-x32 ubsan_cxx-x32 dfsan-x32 lsan-x32
+Arch.builtins-x32 := x32
+Arch.profile-x32 := x32
+endif
+
 CFLAGS := -Wall -Werror -O3 -fomit-frame-pointer
 
 CFLAGS.builtins-i386 := $(CFLAGS) -m32
 CFLAGS.builtins-x86_64 := $(CFLAGS) -m64
+CFLAGS.builtins-x32 := $(CFLAGS) -mx32
 CFLAGS.profile-i386 := $(CFLAGS) -m32
 CFLAGS.profile-x86_64 := $(CFLAGS) -m64
+CFLAGS.profile-x32 := $(CFLAGS) -mx32
 
 FUNCTIONS.builtins-i386 := $(CommonFunctions) $(ArchFunctions.i386)
 FUNCTIONS.builtins-x86_64 := $(CommonFunctions) $(ArchFunctions.x86_64)
+FUNCTIONS.builtins-x32 := $(CommonFunctions) $(ArchFunctions.x32)
 FUNCTIONS.profile-i386 := GCDAProfiling InstrProfiling InstrProfilingBuffer \
                           InstrProfilingFile InstrProfilingPlatformOther \
                           InstrProfilingRuntime InstrProfilingUtil
 FUNCTIONS.profile-x86_64 := $(FUNCTIONS.profile-i386)
+FUNCTIONS.profile-x32 := $(FUNCTIONS.profile-x32)
 
 # Always use optimized variants.
 OPTIMIZED := 1
Only in llvm-3.7.1.src/projects/compiler-rt/make/platform: clang_linux.mk.orig
Only in llvm-3.7.1.src/projects/compiler-rt/make/platform: clang_linux.mk.rej

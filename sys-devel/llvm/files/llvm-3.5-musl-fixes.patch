llvm-musl.patch from alpine linux

diff -ru llvm-3.5.0.src.orig/include/llvm/Target/TargetLibraryInfo.h llvm-3.5.0.src/include/llvm/Target/TargetLibraryInfo.h
--- llvm-3.5.0.src.orig/include/llvm/Target/TargetLibraryInfo.h	2014-11-13 12:51:53.341455401 +0000
+++ llvm-3.5.0.src/include/llvm/Target/TargetLibraryInfo.h	2014-11-13 12:52:35.078889077 +0000
@@ -13,6 +13,15 @@
 #include "llvm/ADT/DenseMap.h"
 #include "llvm/Pass.h"
 
+#undef fopen64
+#undef fseeko64
+#undef fstat64
+#undef fstatvfs64
+#undef ftello64
+#undef lstat64
+#undef stat64
+#undef tmpfile64
+
 namespace llvm {
   class Triple;
 
diff -ru llvm-3.5.0.src.orig/lib/Support/DynamicLibrary.cpp llvm-3.5.0.src/lib/Support/DynamicLibrary.cpp
--- llvm-3.5.0.src.orig/lib/Support/DynamicLibrary.cpp	2014-11-13 12:51:53.341455401 +0000
+++ llvm-3.5.0.src/lib/Support/DynamicLibrary.cpp	2014-11-13 12:52:07.781720766 +0000
@@ -138,7 +138,7 @@
 
 // This macro returns the address of a well-known, explicit symbol
 #define EXPLICIT_SYMBOL(SYM) \
-   if (!strcmp(symbolName, #SYM)) return &SYM
+   if (!strcmp(symbolName, #SYM)) return (void *) &SYM
 
 // On linux we have a weird situation. The stderr/out/in symbols are both
 // macros and global variables because of standards requirements. So, we
diff -ru llvm-3.5.0.src.orig/lib/Support/Unix/Signals.inc llvm-3.5.0.src/lib/Support/Unix/Signals.inc
--- llvm-3.5.0.src.orig/lib/Support/Unix/Signals.inc	2014-11-13 12:51:53.341455401 +0000
+++ llvm-3.5.0.src/lib/Support/Unix/Signals.inc	2014-11-13 12:52:07.781720766 +0000
@@ -266,7 +266,7 @@
 // On glibc systems we have the 'backtrace' function, which works nicely, but
 // doesn't demangle symbols.
 void llvm::sys::PrintStackTrace(FILE *FD) {
-#if defined(HAVE_BACKTRACE) && defined(ENABLE_BACKTRACES)
+#if defined(__GLIBC__) && defined(HAVE_BACKTRACE) && defined(ENABLE_BACKTRACES)
   static void* StackTrace[256];
   // Use backtrace() to output a backtrace on Linux systems with glibc.
   int depth = backtrace(StackTrace,
diff -ru llvm-3.5.0.src.orig/lib/Target/TargetLibraryInfo.cpp llvm-3.5.0.src/lib/Target/TargetLibraryInfo.cpp
--- llvm-3.5.0.src.orig/lib/Target/TargetLibraryInfo.cpp	2014-11-13 12:51:53.341455401 +0000
+++ llvm-3.5.0.src/lib/Target/TargetLibraryInfo.cpp	2014-11-13 12:52:07.785054160 +0000
@@ -653,14 +653,15 @@
   }
 
   // The following functions are available on at least Linux:
-  if (!T.isOSLinux()) {
+  if (!T.isOSLinux())
+    TLI.setUnavailable(LibFunc::memalign);
+  if (1 /*!T.isGlibc()*/) {
     TLI.setUnavailable(LibFunc::dunder_strdup);
     TLI.setUnavailable(LibFunc::dunder_strtok_r);
     TLI.setUnavailable(LibFunc::dunder_isoc99_scanf);
     TLI.setUnavailable(LibFunc::dunder_isoc99_sscanf);
     TLI.setUnavailable(LibFunc::under_IO_getc);
     TLI.setUnavailable(LibFunc::under_IO_putc);
-    TLI.setUnavailable(LibFunc::memalign);
     TLI.setUnavailable(LibFunc::fopen64);
     TLI.setUnavailable(LibFunc::fseeko64);
     TLI.setUnavailable(LibFunc::fstat64);
diff -ru llvm-3.5.0.src.orig/utils/unittest/googletest/src/gtest.cc llvm-3.5.0.src/utils/unittest/googletest/src/gtest.cc
--- llvm-3.5.0.src.orig/utils/unittest/googletest/src/gtest.cc	2014-11-13 12:51:53.341455401 +0000
+++ llvm-3.5.0.src/utils/unittest/googletest/src/gtest.cc	2014-11-13 12:52:07.785054160 +0000
@@ -120,6 +120,7 @@
 
 #if GTEST_CAN_STREAM_RESULTS_
 # include <arpa/inet.h>  // NOLINT
+# include <sys/socket.h>  // NOLINT
 # include <netdb.h>  // NOLINT
 #endif
 

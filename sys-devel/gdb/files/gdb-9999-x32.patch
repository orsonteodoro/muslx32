diff -urN -x '*.rej' -x '*.orig' gdb-9999.orig/gdb/gdbserver/Makefile.in gdb-9999/gdb/gdbserver/Makefile.in
--- gdb-9999.orig/gdb/gdbserver/Makefile.in	2016-07-28 13:30:36.185548447 -0700
+++ gdb-9999/gdb/gdbserver/Makefile.in	2016-07-28 13:34:20.650555844 -0700
@@ -647,6 +647,15 @@
 errors-ipa.o: ../common/errors.c
 	$(IPAGENT_COMPILE) $<
 	$(POSTCOMPILE)
+x32-linux-ipa.o: x32-linux.c
+	$(IPAGENT_COMPILE) $<
+	$(POSTCOMPILE)
+x32-avx-linux-ipa.o: x32-avx-linux.c
+	$(IPAGENT_COMPILE) $<
+	$(POSTCOMPILE)
+x32-avx512-linux-ipa.o: x32-avx512-linux.c
+	$(IPAGENT_COMPILE) $<
+	$(POSTCOMPILE)
 
 ax.o: ax.c
 	$(COMPILE) $(WARN_CFLAGS_NO_FORMAT) $<
diff -urN -x '*.rej' -x '*.orig' gdb-9999.orig/gdb/gdbserver/configure gdb-9999/gdb/gdbserver/configure
--- gdb-9999.orig/gdb/gdbserver/configure	2016-07-28 13:30:36.197548448 -0700
+++ gdb-9999/gdb/gdbserver/configure	2016-07-28 13:32:38.642552483 -0700
@@ -6795,6 +6795,37 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $gdb_cv_i386_is_x86_64" >&5
 $as_echo "$gdb_cv_i386_is_x86_64" >&6; }
     ;;
+
+  x86_64-*-linux*)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if building for x32" >&5
+$as_echo_n "checking if building for x32... " >&6; }
+if test "${gdb_cv_x86_is_x32+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  save_CPPFLAGS="$CPPFLAGS"
+                   CPPFLAGS="$CPPFLAGS $CFLAGS"
+                   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#if __x86_64__ && __ILP32__
+got it
+#endif
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "got it" >/dev/null 2>&1; then :
+  gdb_cv_x86_is_x32=yes
+else
+  gdb_cv_x86_is_x32=no
+fi
+rm -f conftest*
+
+                   CPPFLAGS="$save_CPPFLAGS"
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $gdb_cv_x86_is_x32" >&5
+$as_echo "$gdb_cv_x86_is_x32" >&6; }
+    ;;
+
   m68k-*-*)
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking if building for Coldfire" >&5
 $as_echo_n "checking if building for Coldfire... " >&6; }
diff -urN -x '*.rej' -x '*.orig' gdb-9999.orig/gdb/gdbserver/configure.ac gdb-9999/gdb/gdbserver/configure.ac
--- gdb-9999.orig/gdb/gdbserver/configure.ac	2016-07-28 13:30:36.197548448 -0700
+++ gdb-9999/gdb/gdbserver/configure.ac	2016-07-28 13:32:38.644552483 -0700
@@ -218,6 +218,20 @@
                     [gdb_cv_i386_is_x86_64=no])
                     CPPFLAGS="$save_CPPFLAGS"])
     ;;
+
+  x86_64-*-linux*)
+    AC_CACHE_CHECK([if building for x32], [gdb_cv_x86_is_x32],
+                  [save_CPPFLAGS="$CPPFLAGS"
+                   CPPFLAGS="$CPPFLAGS $CFLAGS"
+                   AC_EGREP_CPP([got it], [
+#if __x86_64__ && __ILP32__
+got it
+#endif
+                ], [gdb_cv_x86_is_x32=yes],
+                   [gdb_cv_x86_is_x32=no])
+                   CPPFLAGS="$save_CPPFLAGS"])
+    ;;
+
   m68k-*-*)
     AC_CACHE_CHECK([if building for Coldfire], [gdb_cv_m68k_is_coldfire],
       	           [save_CPPFLAGS="$CPPFLAGS"
diff -urN -x '*.rej' -x '*.orig' gdb-9999.orig/gdb/gdbserver/configure.srv gdb-9999/gdb/gdbserver/configure.srv
--- gdb-9999.orig/gdb/gdbserver/configure.srv	2016-07-28 13:30:36.197548448 -0700
+++ gdb-9999/gdb/gdbserver/configure.srv	2016-07-28 13:36:23.108559879 -0700
@@ -31,6 +31,7 @@
 
 ipa_i386_linux_regobj="i386-linux-ipa.o i386-avx-linux-ipa.o  i386-avx-mpx-linux-ipa.o i386-avx512-linux-ipa.o i386-mpx-linux-ipa.o i386-mmx-linux-ipa.o"
 ipa_amd64_linux_regobj="amd64-linux-ipa.o amd64-avx-linux-ipa.o amd64-avx-mpx-linux-ipa.o amd64-avx512-linux-ipa.o amd64-mpx-linux-ipa.o"
+ipa_x32_linux_regobj="x32-linux-ipa.o x32-avx-linux-ipa.o x32-avx512-linux-ipa.o"
 ipa_ppc_linux_regobj="powerpc-32l-ipa.o powerpc-altivec32l-ipa.o powerpc-cell32l-ipa.o powerpc-vsx32l-ipa.o powerpc-isa205-32l-ipa.o powerpc-isa205-altivec32l-ipa.o powerpc-isa205-vsx32l-ipa.o powerpc-e500l-ipa.o powerpc-64l-ipa.o powerpc-altivec64l-ipa.o powerpc-cell64l-ipa.o powerpc-vsx64l-ipa.o powerpc-isa205-64l-ipa.o powerpc-isa205-altivec64l-ipa.o powerpc-isa205-vsx64l-ipa.o"
 
 srv_i386_32bit_xmlfiles="i386/32bit-core.xml i386/32bit-sse.xml i386/32bit-avx.xml i386/32bit-avx512.xml i386/32bit-mpx.xml"
@@ -364,7 +365,12 @@
 			srv_linux_regsets=yes
 			srv_linux_thread_db=yes
 			srv_linux_btrace=yes
-			ipa_obj="${ipa_amd64_linux_regobj} linux-amd64-ipa.o"
+                        if test "$gdb_cv_x86_is_x32" = yes ; then
+                            ipa_obj="${ipa_x32_linux_regobj}"
+                        else
+                            ipa_obj="${ipa_amd64_linux_regobj}"
+                        fi
+                        ipa_obj="${ipa_obj} linux-amd64-ipa.o"
 			;;
   x86_64-*-mingw*)	srv_regobj="$srv_amd64_regobj"
 			srv_tgtobj="x86-low.o x86-dregs.o i387-fp.o win32-low.o win32-i386-low.o"
diff -urN -x '*.rej' -x '*.orig' gdb-9999.orig/gdb/gdbserver/linux-amd64-ipa.c gdb-9999/gdb/gdbserver/linux-amd64-ipa.c
--- gdb-9999.orig/gdb/gdbserver/linux-amd64-ipa.c	2016-07-28 13:30:36.227548449 -0700
+++ gdb-9999/gdb/gdbserver/linux-amd64-ipa.c	2016-07-28 13:38:39.467564373 -0700
@@ -174,6 +174,19 @@
 const struct target_desc *
 get_ipa_tdesc (int idx)
 {
+#if defined __ILP32__
+  switch (idx)
+    {
+    case X86_TDESC_SSE:
+      return tdesc_x32_linux;
+    case X86_TDESC_AVX:
+      return tdesc_x32_avx_linux;
+    case X86_TDESC_AVX512:
+      return tdesc_x32_avx512_linux;
+    default:
+      break;
+    }
+#else
   switch (idx)
     {
     case X86_TDESC_SSE:
@@ -186,11 +199,11 @@
       return tdesc_amd64_avx_mpx_linux;
     case X86_TDESC_AVX512:
       return tdesc_amd64_avx512_linux;
-    default:
-      internal_error (__FILE__, __LINE__,
-		      "unknown ipa tdesc index: %d", idx);
-      return tdesc_amd64_linux;
     }
+#endif
+
+  internal_error (__FILE__, __LINE__,
+                 "unknown ipa tdesc index: %d", idx);
 }
 
 /* Allocate buffer for the jump pads.  Since we're using 32-bit jumps
@@ -213,9 +226,15 @@
 void
 initialize_low_tracepoint (void)
 {
+#if defined __ILP32__
+  init_registers_x32_linux ();
+  init_registers_x32_avx_linux ();
+  init_registers_x32_avx512_linux ();
+#else
   init_registers_amd64_linux ();
   init_registers_amd64_avx_linux ();
   init_registers_amd64_avx_mpx_linux ();
   init_registers_amd64_mpx_linux ();
   init_registers_amd64_avx512_linux ();
+#endif
 }
